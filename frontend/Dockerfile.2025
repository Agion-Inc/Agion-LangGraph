# Ultra-Lightweight Frontend Dockerfile - September 2025
# Node.js 24 (latest) with minimal footprint
FROM node:24-alpine as builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies with latest npm
RUN npm ci --only=production --no-audit --no-fund

# Copy application code
COPY . .

# Build the application
RUN npm run build

# Production stage - nginx (latest alpine)
FROM nginx:1.27-alpine

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy password file for basic auth
COPY .htpasswd /etc/nginx/.htpasswd

# Copy built application from builder
COPY --from=builder /app/build /usr/share/nginx/html

# Expose port
EXPOSE 80

# Optimized health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=2 \
    CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx with optimized config
CMD ["nginx", "-g", "daemon off;"]