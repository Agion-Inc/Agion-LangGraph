apiVersion: v1
kind: Namespace
metadata:
  name: agion-langgraph
  labels:
    name: agion-langgraph
    app: langgraph-agents
    platform.agion.com/component: agent-container
    platform.agion.com/zone: compute
---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: langgraph-backend
  namespace: agion-langgraph
  labels:
    app: langgraph-backend
    platform.agion.com/component: agent-container
spec:
  replicas: 1
  selector:
    matchLabels:
      app: langgraph-backend
  template:
    metadata:
      labels:
        app: langgraph-backend
        platform.agion.com/component: agent-container
    spec:
      containers:
      - name: langgraph-backend
        image: agionacr62703.azurecr.io/langgraph-backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          value: "postgresql+asyncpg://bpchat_user:GXd6yubJfEr6Yvz3AH2V5Fp4E@postgres.agion-data.svc.cluster.local:5432/langgraph_db"
        - name: CORS_ORIGINS
          value: '["https://langgraph.agion.dev","http://localhost:3000"]'
        - name: JWT_SECRET_KEY
          value: "LangGraph-Azure-Production-JWT-Secret-2025-langgraph-agion-dev"
        - name: REQUESTY_AI_API_KEY
          value: "sk-HIrwsHNpSU6aQtR9H6mx9+o4/CXXfL7DHpJwSxh188ot6Tu1iSvVNFkIey0naP1yKGB0SqNJ4lcxRfDF/f95syfRw6AItfTdPnWmn7HQ1gc="
        - name: REQUESTY_AI_API_BASE
          value: "https://router.requesty.ai/v1"
        - name: ACCESS_PASSWORD
          value: "RGBrands2025"
        # Agion Platform Integration
        - name: AGION_GATEWAY_URL
          value: "http://gateway-service.agion-core.svc.cluster.local:8080"
        - name: AGION_REDIS_URL
          value: "redis://redis-service.agion-core.svc.cluster.local:6379"
        - name: AGION_AGENT_ID
          value: "langgraph-v2"
        - name: AGION_AGENT_VERSION
          value: "2.0.0"
        - name: AGION_POLICY_SYNC_ENABLED
          value: "true"
        volumeMounts:
        - name: data
          mountPath: /app/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: langgraph-data-pvc
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: langgraph-frontend
  namespace: agion-langgraph
  labels:
    app: langgraph-frontend
    platform.agion.com/component: agent-container
spec:
  replicas: 2
  selector:
    matchLabels:
      app: langgraph-frontend
  template:
    metadata:
      labels:
        app: langgraph-frontend
        platform.agion.com/component: agent-container
    spec:
      containers:
      - name: langgraph-frontend
        image: agionacr62703.azurecr.io/langgraph-frontend:latest
        ports:
        - containerPort: 80
---
# Services
apiVersion: v1
kind: Service
metadata:
  name: langgraph-backend-service
  namespace: agion-langgraph
  labels:
    app: langgraph-backend
    platform.agion.com/component: agent-container
spec:
  selector:
    app: langgraph-backend
  ports:
  - port: 8000
    targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: langgraph-frontend-service
  namespace: agion-langgraph
  labels:
    app: langgraph-frontend
    platform.agion.com/component: agent-container
spec:
  selector:
    app: langgraph-frontend
  ports:
  - port: 80
    targetPort: 80
---
# PVC for backend data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: langgraph-data-pvc
  namespace: agion-langgraph
  labels:
    app: langgraph-backend
    platform.agion.com/component: agent-container
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: langgraph-ingress
  namespace: agion-langgraph
  labels:
    app: langgraph
    platform.agion.com/component: agent-container
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - langgraph.agion.dev
    secretName: langgraph-tls
  rules:
  - host: langgraph.agion.dev
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: langgraph-backend-service
            port:
              number: 8000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: langgraph-backend-service
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: langgraph-frontend-service
            port:
              number: 80
