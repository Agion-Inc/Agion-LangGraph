apiVersion: v1
kind: Namespace
metadata:
  name: airgb
---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: airgb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: agionacr62703.azurecr.io/airgb-backend:fixed
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          value: "sqlite+aiosqlite:///./data/bpchat.db"
        - name: CORS_ORIGINS
          value: '["https://airgb.agion.dev"]'
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: airgb-secrets
              key: jwt-secret
        - name: REQUESTY_AI_API_KEY
          valueFrom:
            secretKeyRef:
              name: airgb-secrets
              key: api-key
        volumeMounts:
        - name: data
          mountPath: /app/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: backend-data-pvc
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: airgb
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: agionacr62703.azurecr.io/airgb-nginx-proxy:latest
        ports:
        - containerPort: 80
---
# Services
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: airgb
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: airgb
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
---
# PVC for backend data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-data-pvc
  namespace: airgb
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: airgb-ingress
  namespace: airgb
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - airgb.agion.dev
    secretName: airgb-tls
  rules:
  - host: airgb.agion.dev
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 8000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
